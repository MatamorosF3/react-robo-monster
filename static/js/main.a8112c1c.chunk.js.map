{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","children","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","userResponse","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,GCHE,I,kBDGK,SAACC,GACnB,OAAO,sBAAKC,UAAU,iBAAf,UACL,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aEHTC,EAAW,SAACR,GAGvB,OAFAS,QAAQC,IAAI,UAAWV,GACvBS,QAAQC,IAAI,mBAAoBV,EAAMW,UAC/B,qBAAKV,UAAU,YAAf,SACJD,EAAMY,SAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPlBS,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OAAO,uBAAOf,UAAU,SAASgB,SAAWD,EAAcE,KAAK,SAASH,YAAaA,MCwCxEI,E,kDArCb,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,gEAaO,IAAD,OAClBb,QAAQC,IAAI,uBACZgB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAkBA,EAAaC,UACpCF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,+BAGrC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAAIA,EAAQE,KAAK4B,cAAcC,SAASb,EAAYY,kBACpG,OAEE,sBAAKjC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEc,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a8112c1c.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) =>{\n  return <div className='card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=300x300`}></img>\n\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\n\nexport const CardList = (props) => {\n  console.log(\"Props: \", props);\n  console.log(\"Props children: \", props.children);\n  return <div className='card-list'>\n    {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster}></Card>\n          ))}\n  </div>\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n  return <input className='search' onChange={ handleChange} type='search' placeholder={placeholder}/>\n}","import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  componentDidMount() {\n    console.log(\"Component did mount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((userResponse) => userResponse.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      \n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder='Search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}